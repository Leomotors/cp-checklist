# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Course {
  courseNo: String!
  academicYear: String!
  semester: String!
  studyProgram: String!
  abbrName: String!
  courseNameEn: String!
  courseNameTh: String!
  courseDescEn: String
  courseDescTh: String
  courseCondition: String!
  credit: Float!
  creditHours: String!
  department: String!
  faculty: String!
  genEdType: GenEdType!
}

enum GenEdType {
  SO
  HU
  SC
  IN
  NO
}

type User {
  id: ID!
  username: String!
  password: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Query {
  users(where: UserWhereInput, orderBy: [UserOrderByWithRelationInput!], cursor: UserWhereUniqueInput, take: Int, skip: Int, distinct: [UserScalarFieldEnum!]): [User!]!
  courses(where: CourseWhereInput, orderBy: [CourseOrderByWithRelationInput!], cursor: CourseWhereUniqueInput, take: Int, skip: Int, distinct: [CourseScalarFieldEnum!]): [Course!]!
}

input UserWhereInput {
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
  id: StringFilter
  username: StringFilter
  password: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringFilter
}

enum QueryMode {
  default
  insensitive
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input DateTimeFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeFilter
}

input UserOrderByWithRelationInput {
  id: SortOrder
  username: SortOrder
  password: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
}

enum SortOrder {
  asc
  desc
}

input UserWhereUniqueInput {
  id: String
  username: String
}

enum UserScalarFieldEnum {
  id
  username
  password
  createdAt
  updatedAt
}

input CourseWhereInput {
  AND: [CourseWhereInput!]
  OR: [CourseWhereInput!]
  NOT: [CourseWhereInput!]
  courseNo: StringFilter
  academicYear: StringFilter
  semester: StringFilter
  studyProgram: StringFilter
  abbrName: StringFilter
  courseNameEn: StringFilter
  courseNameTh: StringFilter
  courseDescEn: StringNullableFilter
  courseDescTh: StringNullableFilter
  courseCondition: StringFilter
  credit: FloatFilter
  creditHours: StringFilter
  department: StringFilter
  faculty: StringFilter
  genEdType: EnumGenEdTypeFilter
}

input StringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  mode: QueryMode
  not: NestedStringNullableFilter
}

input NestedStringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringNullableFilter
}

input FloatFilter {
  equals: Float
  in: [Float!]
  notIn: [Float!]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: NestedFloatFilter
}

input NestedFloatFilter {
  equals: Float
  in: [Float!]
  notIn: [Float!]
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  not: NestedFloatFilter
}

input EnumGenEdTypeFilter {
  equals: GenEdType
  in: [GenEdType!]
  notIn: [GenEdType!]
  not: NestedEnumGenEdTypeFilter
}

input NestedEnumGenEdTypeFilter {
  equals: GenEdType
  in: [GenEdType!]
  notIn: [GenEdType!]
  not: NestedEnumGenEdTypeFilter
}

input CourseOrderByWithRelationInput {
  courseNo: SortOrder
  academicYear: SortOrder
  semester: SortOrder
  studyProgram: SortOrder
  abbrName: SortOrder
  courseNameEn: SortOrder
  courseNameTh: SortOrder
  courseDescEn: SortOrder
  courseDescTh: SortOrder
  courseCondition: SortOrder
  credit: SortOrder
  creditHours: SortOrder
  department: SortOrder
  faculty: SortOrder
  genEdType: SortOrder
}

input CourseWhereUniqueInput {
  courseNo_academicYear_semester_studyProgram: CourseCourseNoAcademicYearSemesterStudyProgramCompoundUniqueInput
}

input CourseCourseNoAcademicYearSemesterStudyProgramCompoundUniqueInput {
  courseNo: String!
  academicYear: String!
  semester: String!
  studyProgram: String!
}

enum CourseScalarFieldEnum {
  courseNo
  academicYear
  semester
  studyProgram
  abbrName
  courseNameEn
  courseNameTh
  courseDescEn
  courseDescTh
  courseCondition
  credit
  creditHours
  department
  faculty
  genEdType
}